body file control{
      inputs => { "$(sys.policy_entry_dirname)/../../policy/apt-pin-packages.cf",
                  "$(sys.policy_entry_dirname)/../../policy/pin-package.cf",
                  "$(sys.libdir)/testing.cf",
                  "$(sys.libdir)/stdlib.cf" };
}
bundle agent __main__
{
  methods:
      "init";
      "test";
      "check";

}
bundle agent init
{
  methods:

      "Ensure apt package is pinned to version"
        comment => concat( "We need a pinned configuration to exist so",
                           "that we can test purging it." ),
        usebundle => apt:package_version_priority_pinned( "apackage",
                                                          "1.2.3",
                                                          "999",
                                                          "present" );
}
bundle agent test
{
  methods:
      # Configured via def.json in same directory
      "Ensure apt packages are pinned as configured in def.json"
        usebundle => apt:pin_packages;
}
bundle agent check
{
  methods:
      "check_state";
      "check_report";
}
bundle agent check_state
{
  commands:
      "/bin/echo File for pinned package exists as expected"
        classes => results( "namespace", "test_pinned_package_config_file_present" ),
        if => fileexists( "$(apt:package_version_priority_pinned.preferences_dir)/zpackage" );

      "/bin/echo File for pinned package absent as expected"
        classes => results( "namespace", "test_pinned_package_config_file_absent" ),
        if => not( fileexists( "$(apt:package_version_priority_pinned.preferences_dir)/apackage" ) );
}
bundle agent check_report
{
  methods:
      "Test that zpackage pin exists"
        usebundle => testing_ok_if("test_pinned_package_config_file_present_repaired",
                                   "Test that config file for pinned package is present",
                                   "error: Pinned package config $(apt:package_version_priority_pinned.preferences_dir)/zpackage missing",
                                   "trace",
                                   "delayed-tap");

      "Test that apackage pin is absent"
        usebundle => testing_ok_if("test_pinned_package_config_file_absent_repaired",
                                   "Test that config file for pinned package is absent",
                                   "error: Pinned package config $(apt:package_version_priority_pinned.preferences_dir)/apackage present",
                                   "trace",
                                   "delayed-tap");

      # Write out the TAP report
      "TAP Report"
        usebundle => testing_tap_report( "$(this.promise_dirname)/artifacts/test-result.tap" );
}
